name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Code (Important for Caching to Work)
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetches all history for better caching

      # 2. Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Cache Maven Packages (Key for Speeding up Builds)
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 4. Build with Maven (Using Batch Mode for Non-Interactive Build)
      - name: Build with Maven
        run: mvn clean install -DskipTests=true -B

      # 5. Decode and Save Keystore (Securely Retrieve Keystore from Secret)
      #- name: Decode and Save Keystore
        #run: |
          #mkdir -p src/main/resources
          #echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > src/main/resources/keystore.p12

      # 6. Docker Login (Recommended GitHub Action for Secure Login)
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 7. Build and Push Docker image
      - name: Build and Push Docker image
        env:
          IMAGE_NAME: highschoolvn/kinder_ielts
        run: |
          docker build -t ${IMAGE_NAME} .
          docker push ${IMAGE_NAME}

      # 8. Set up SSH and Environment Variables (Before Deployment)
      - name: Set up SSH and Environment Variables
        run: |
          # Install SSH client
          sudo apt-get update
          sudo apt-get install -y openssh-client

          # Create SSH directory
          mkdir -p ~/.ssh

          # Write the private key to a file
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa

          # Set correct permissions
          chmod 600 ~/.ssh/id_rsa

          # Add the VPS host key to known_hosts (for security)
          ssh-keyscan -H 150.95.109.50 >> ~/.ssh/known_hosts

          # Export environment variables
          echo "AZURE_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "AZURE_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ONEDRIVE_DRIVE_ID=${{ secrets.ONEDRIVE_DRIVE_ID }}" >> $GITHUB_ENV

      # 9. Deploy to VPS (Using Environment Variables for Configuration)
      - name: Deploy to VPS
        run: |
          # Add your deployment commands here, using SSH to connect to your VPS
          ssh root@150.95.109.50 "
            # Your deployment commands (e.g., stop/start Docker container, git pull, etc.)
            docker stop kinder_ielts && docker rm kinder_ielts && docker rmi highschoolvn/kinder_ielts || true
            docker pull highschoolvn/kinder_ielts
            docker run -d \
              --name kinder_ielts \
              -p 8080:8080 \
              -e SPRING_CONFIG_LOCATION=classpath:/application.properties \
              -e SPRING_DATASOURCE_URL=\"jdbc:sqlserver://150.95.109.50:1433;encrypt=true;trustServerCertificate=true;databaseName=kinder_ielts\" \
              -e SPRING_DATASOURCE_USERNAME=sa \
              -e SPRING_DATASOURCE_PASSWORD=Fpt123123@ \
              -e SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.SQLServerDialect \
              -e SPRING_JPA_HIBERNATE_DDL_AUTO=update \
              -e SPRING_JPA_SHOW_SQL=true \
              -e SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true \
              -e SECRET_KEY=94b83cf0b942b22cc7c98924f90eec3bc90b974d61392b4eb694b85f7c68265e \
              -e EXPIRATION=604800000 \
              -e REFRESH_TOKEN_EXPIRATION=2592000000 \
              -e SERVER_PORT=8080 \
              -e SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_TIME_ZONE=Asia/Bangkok \
              -e SPRING_JACKSON_TIME_ZONE=Asia/Bangkok \
              -e AZURE_TENANT_ID=${{ env.AZURE_TENANT_ID }} \
              -e AZURE_CLIENT_ID=${{ env.AZURE_CLIENT_ID }} \
              -e AZURE_CLIENT_SECRET=${{ env.AZURE_CLIENT_SECRET }} \
              -e ONEDRIVE_DRIVE_ID=${{ env.ONEDRIVE_DRIVE_ID }} \
              highschoolvn/kinder_ielts
            " # Close the SSH command
